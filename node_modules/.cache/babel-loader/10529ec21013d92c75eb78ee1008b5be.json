{"ast":null,"code":"var _jsxFileName = \"/Users/samarthgwalani/Development/code/Mod2/projects/phase-2-project-restart/phase-2-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from './components/NavBar/NavBar';\nimport Home from \"./components/Home/Home\";\nimport ProductPage from \"./components/ProductPage\";\nimport ProductList from './components/ProductList/ProductList';\nimport Cart from '../src/components/Cart/Cart';\nimport { Route, Switch } from 'react-router-dom';\nimport ProductForm from './components/ProductList/ProductForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    fetch(\"http://localhost:3004/products\").then(resp => resp.json()).then(data => {\n      console.log(data);\n      setProducts(data);\n    });\n  }, []); //onClick of cart icon add product id to cart.\n\n  const [cart, setCart] = useState({});\n  const [cartItems, setCartItems] = useState(0);\n  const [products, setProducts] = useState();\n  const [uploadFormView, setUploadFormView] = useState(false);\n\n  function handleAddToCart(e, id) {\n    console.log('YEO');\n    console.log(e, id);\n    setCartItems(cartItems => cartItems + 1);\n  }\n\n  function toggleForm() {\n    setUploadFormView(!uploadFormView);\n  }\n\n  function sortShoesAscending() {\n    // Use the spread (...) operator to clone the state / prompt React to ackowledge the state change\n    let originalList = [...products]; // .sort() \"sorts\" the elements of an array and returns the sorted array.\n\n    const sortedList = originalList.sort((currentShoe, nextShoe) => {\n      let priceCurrentShoe = currentShoe.price;\n      let priceNextShoe = nextShoe.price; // Compare the two vote amounts. \n      // If comparison returns a value ≤ 0, leave a and b in the same order.\n      // If comparison returns a value > than 0, sort b before a.\n\n      if (priceCurrentShoe < priceNextShoe) return -1;\n      if (priceCurrentShoe > priceNextShoe) return 1;\n      return 0;\n    }); // Use \"sortedList\" to set array returned from .sort() as value for \"paintings\" state\n\n    setProducts(sortedList);\n  }\n\n  function sortShoesDescending() {\n    // Use the spread (...) operator to clone the state / prompt React to ackowledge the state change\n    let originalList = [...products]; // .sort() \"sorts\" the elements of an array and returns the sorted array.\n\n    const sortedList = originalList.sort((currentShoe, nextShoe) => {\n      let priceCurrentShoe = currentShoe.price;\n      let priceNextShoe = nextShoe.price; // Compare the two vote amounts. \n      // If comparison returns a value ≤ 0, leave a and b in the same order.\n      // If comparison returns a value > than 0, sort b before a.\n\n      if (priceCurrentShoe > priceNextShoe) return -1;\n      if (priceCurrentShoe < priceNextShoe) return 1;\n      return 0;\n    }); // Use \"sortedList\" to set array returned from .sort() as value for \"paintings\" state\n\n    setProducts(sortedList);\n  }\n\n  function pushSubmit(dataArray) {\n    const newProduct = dataArray;\n    const newProductList = [...products, newProduct];\n    setProducts(newProductList);\n    fetch(\"http://localhost:3004/products\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(newProduct)\n    }).then(resp => resp.json()).then(data => console.log(data));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          uploadFormView: uploadFormView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/marketplace\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          cartItems: cartItems,\n          toggleForm: toggleForm,\n          uploadFormView: uploadFormView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), uploadFormView ? /*#__PURE__*/_jsxDEV(ProductForm, {\n          pushSubmit: pushSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(ProductList, {\n          onAddToCart: handleAddToCart,\n          products: products,\n          sortShoesAscending: sortShoesAscending,\n          sortShoesDescending: sortShoesDescending\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/cart\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          cartItems: cartItems,\n          toggleForm: toggleForm,\n          uploadFormView: uploadFormView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4slGYa5eSMnMU5dy0hzGN/8Sq9E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/samarthgwalani/Development/code/Mod2/projects/phase-2-project-restart/phase-2-project/src/App.js"],"names":["React","useState","useEffect","NavBar","Home","ProductPage","ProductList","Cart","Route","Switch","ProductForm","App","fetch","then","resp","json","data","console","log","setProducts","cart","setCart","cartItems","setCartItems","products","uploadFormView","setUploadFormView","handleAddToCart","e","id","toggleForm","sortShoesAscending","originalList","sortedList","sort","currentShoe","nextShoe","priceCurrentShoe","price","priceNextShoe","sortShoesDescending","pushSubmit","dataArray","newProduct","newProductList","method","headers","Accept","body","JSON","stringify"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from './components/NavBar/NavBar';\nimport Home from \"./components/Home/Home\"\nimport ProductPage from \"./components/ProductPage\"\nimport ProductList from './components/ProductList/ProductList';\nimport Cart from '../src/components/Cart/Cart'\nimport { Route, Switch, } from 'react-router-dom'\nimport ProductForm from './components/ProductList/ProductForm';\n\nfunction App() {\n  useEffect(() => {\n    fetch(\"http://localhost:3004/products\")\n      .then(resp => resp.json())\n      .then(data => {\n          \n        console.log(data)\n        setProducts(data)\n      })\n  }, [])\n  //onClick of cart icon add product id to cart.\n  const [cart, setCart] = useState({})\n  const [cartItems, setCartItems] = useState(0)\n  const [products, setProducts] = useState()\n  const [uploadFormView, setUploadFormView] = useState(false)\n\n  function handleAddToCart(e, id) {\n    console.log('YEO')\n    console.log(e, id)\n    setCartItems((cartItems) => cartItems + 1)\n  }\n\n  function toggleForm() {\n    setUploadFormView(!uploadFormView);\n  }\n\n  \n\n  function sortShoesAscending() {\n    \n    // Use the spread (...) operator to clone the state / prompt React to ackowledge the state change\n    let originalList = [...products];\n    \n    // .sort() \"sorts\" the elements of an array and returns the sorted array.\n    const sortedList = originalList.sort((currentShoe, nextShoe) => {\n      let priceCurrentShoe = currentShoe.price;\n      let priceNextShoe = nextShoe.price;\n\n      // Compare the two vote amounts. \n      // If comparison returns a value ≤ 0, leave a and b in the same order.\n      // If comparison returns a value > than 0, sort b before a.\n\n      if (priceCurrentShoe < priceNextShoe) return -1;\n      if (priceCurrentShoe > priceNextShoe) return 1;\n      return 0;\n    });\n\n    // Use \"sortedList\" to set array returned from .sort() as value for \"paintings\" state\n    setProducts(sortedList);\n  }\n\n  function sortShoesDescending() {\n\n    // Use the spread (...) operator to clone the state / prompt React to ackowledge the state change\n    let originalList = [...products];\n    \n    // .sort() \"sorts\" the elements of an array and returns the sorted array.\n    const sortedList = originalList.sort((currentShoe, nextShoe) => {\n      let priceCurrentShoe = currentShoe.price;\n      let priceNextShoe = nextShoe.price;\n\n      // Compare the two vote amounts. \n      // If comparison returns a value ≤ 0, leave a and b in the same order.\n      // If comparison returns a value > than 0, sort b before a.\n\n      if (priceCurrentShoe > priceNextShoe) return -1;\n      if (priceCurrentShoe < priceNextShoe) return 1;\n      return 0;\n    });\n\n    // Use \"sortedList\" to set array returned from .sort() as value for \"paintings\" state\n    setProducts(sortedList);\n  }\n\n  function pushSubmit(dataArray) {\n    const newProduct = dataArray\n    const newProductList = [...products, newProduct]\n    setProducts(newProductList)\n\n    fetch(\"http://localhost:3004/products\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(newProduct)\n    })\n      .then(resp => resp.json())\n      .then((data) => console.log(data))\n  }\n  \n\n  \n\n  \n\n  return (\n    <div className=\"App\">\n      {/* <NavBar cartItems={cartItems} toggleForm={toggleForm} uploadFormView={uploadFormView}/> */}\n      <Switch>\n        <Route exact path='/'>\n          <Home uploadFormView={uploadFormView}/>\n        </Route>\n        <Route exact path='/marketplace'>\n        <NavBar cartItems={cartItems} toggleForm={toggleForm} uploadFormView={uploadFormView}/>\n        {uploadFormView ? <ProductForm pushSubmit={pushSubmit}/> : <ProductList onAddToCart={handleAddToCart} products={products} sortShoesAscending={sortShoesAscending} sortShoesDescending={sortShoesDescending}/> }\n        </Route>\n        <Route exact path='/cart'>\n        <NavBar cartItems={cartItems} toggleForm={toggleForm} uploadFormView={uploadFormView}/>\n          <Cart />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}