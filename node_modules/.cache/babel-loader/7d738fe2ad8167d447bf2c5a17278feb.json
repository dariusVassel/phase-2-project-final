{"ast":null,"code":"var _jsxFileName = \"/Users/samarthgwalani/Development/code/Mod2/projects/phase-2-project-restart/phase-2-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from './components/NavBar/NavBar';\nimport Home from \"./components/Home/Home\";\nimport ProductPage from \"./components/ProductPage\";\nimport ProductList from './components/ProductList/ProductList';\nimport Cart from '../src/components/Cart/Cart';\nimport { Route, Switch } from 'react-router-dom';\nimport ProductForm from './components/ProductList/ProductForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //onClick of cart icon add product id to cart.\n  const [cart, setCart] = useState({});\n  const [cartItems, setCartItems] = useState();\n  const [products, setProducts] = useState([]);\n\n  function initialCartCount(products) {\n    const cartCount = products.filter(product => product.quantity > 0);\n\n    const reducer = (previousValue, currentValue) => previousValue.quantity + currentValue.quantity;\n\n    console.log(\"Cart counter:\");\n    console.log(cartCount);\n    const itemsInCart = cartCount.reduce(reducer);\n    setCartItems(itemsInCart);\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:3004/products\").then(resp => resp.json()).then(data => {\n      console.log(data);\n      setProducts(data);\n    });\n  }, []);\n\n  function onUpdateProduct(updatedProduct) {\n    const updatedProductArray = products.map(product => {\n      if (product.id === updatedProduct.id) {\n        return updatedProduct;\n      } else {\n        return product;\n      }\n    });\n    setProducts(updatedProductArray);\n  }\n\n  function handleAddToCart(e, id) {\n    // console.log('YEO')\n    // console.log(e, id)\n    const result = products.filter(product => product.id === id);\n    const newObject = result[0].quantity + 1;\n    fetch(`http://localhost:3004/products/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        quantity: newObject\n      })\n    }).then(r => r.json()).then(updatedProduct => {\n      onUpdateProduct(updatedProduct);\n    });\n  }\n\n  const [uploadFormView, setUploadFormView] = useState(false);\n\n  function toggleForm() {\n    setUploadFormView(!uploadFormView);\n  }\n\n  function pushSubmit(dataArray) {\n    const newProduct = dataArray;\n    const newProductList = [...products, newProduct];\n    console.log(newProductList);\n    setProducts(newProductList);\n    fetch(\"http://localhost:3004/products\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(newProduct)\n    }).then(resp => resp.json()).then(data => console.log(data));\n  }\n\n  function sortShoesAscending() {\n    // Use the spread (...) operator to clone the state / prompt React to ackowledge the state change\n    let originalList = [...products]; // .sort() \"sorts\" the elements of an array and returns the sorted array.\n\n    const sortedList = originalList.sort((currentShoe, nextShoe) => {\n      let priceCurrentShoe = currentShoe.price;\n      let priceNextShoe = nextShoe.price; // Compare the two vote amounts. \n      // If comparison returns a value ≤ 0, leave a and b in the same order.\n      // If comparison returns a value > than 0, sort b before a.\n\n      if (priceCurrentShoe < priceNextShoe) return -1;\n      if (priceCurrentShoe > priceNextShoe) return 1;\n      return 0;\n    }); // Use \"sortedList\" to set array returned from .sort() as value for \"paintings\" state\n\n    setProducts(sortedList);\n  }\n\n  function sortShoesDescending() {\n    // Use the spread (...) operator to clone the state / prompt React to ackowledge the state change\n    let originalList = [...products]; // .sort() \"sorts\" the elements of an array and returns the sorted array.\n\n    const sortedList = originalList.sort((currentShoe, nextShoe) => {\n      let priceCurrentShoe = currentShoe.price;\n      let priceNextShoe = nextShoe.price; // Compare the two vote amounts. \n      // If comparison returns a value ≤ 0, leave a and b in the same order.\n      // If comparison returns a value > than 0, sort b before a.\n\n      if (priceCurrentShoe > priceNextShoe) return -1;\n      if (priceCurrentShoe < priceNextShoe) return 1;\n      return 0;\n    }); // Use \"sortedList\" to set array returned from .sort() as value for \"paintings\" state\n\n    setProducts(sortedList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          uploadFormView: uploadFormView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/marketplace\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          cartItems: cartItems,\n          toggleForm: toggleForm,\n          uploadFormView: uploadFormView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this), uploadFormView ? /*#__PURE__*/_jsxDEV(ProductForm, {\n          pushSubmit: pushSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(ProductList, {\n          onAddToCart: handleAddToCart,\n          products: products,\n          sortShoesAscending: sortShoesAscending,\n          sortShoesDescending: sortShoesDescending\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/cart\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          cartItems: cartItems,\n          toggleForm: toggleForm,\n          uploadFormView: uploadFormView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Cart, {\n          products: products\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IMoWeLyLb+FYlFvELJKvflZGoXI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/samarthgwalani/Development/code/Mod2/projects/phase-2-project-restart/phase-2-project/src/App.js"],"names":["React","useState","useEffect","NavBar","Home","ProductPage","ProductList","Cart","Route","Switch","ProductForm","App","cart","setCart","cartItems","setCartItems","products","setProducts","initialCartCount","cartCount","filter","product","quantity","reducer","previousValue","currentValue","console","log","itemsInCart","reduce","fetch","then","resp","json","data","onUpdateProduct","updatedProduct","updatedProductArray","map","id","handleAddToCart","e","result","newObject","method","headers","body","JSON","stringify","r","uploadFormView","setUploadFormView","toggleForm","pushSubmit","dataArray","newProduct","newProductList","Accept","sortShoesAscending","originalList","sortedList","sort","currentShoe","nextShoe","priceCurrentShoe","price","priceNextShoe","sortShoesDescending"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from './components/NavBar/NavBar';\nimport Home from \"./components/Home/Home\"\nimport ProductPage from \"./components/ProductPage\"\nimport ProductList from './components/ProductList/ProductList';\nimport Cart from '../src/components/Cart/Cart'\nimport { Route, Switch, } from 'react-router-dom'\nimport ProductForm from './components/ProductList/ProductForm';\n\nfunction App() {\n  //onClick of cart icon add product id to cart.\n  const [cart, setCart] = useState({})\n  const [cartItems, setCartItems] = useState()\n  const [products, setProducts] = useState([])\n\n  function initialCartCount(products){\n    const cartCount = products.filter(product => product.quantity > 0)\n    const reducer = (previousValue, currentValue) => previousValue.quantity + currentValue.quantity;\n\n    console.log(\"Cart counter:\")\n    console.log(cartCount)\n    \n    const itemsInCart = (cartCount.reduce(reducer));  \n    setCartItems(itemsInCart)\n  }\n\n  \n\n\n  \n  useEffect(() => {\n      fetch(\"http://localhost:3004/products\")\n        .then(resp => resp.json())\n        .then(data => {\n            \n          console.log(data)\n          setProducts(data)\n        })\n    }, [])\n\n    function onUpdateProduct(updatedProduct) {\n      const updatedProductArray = products.map((product) => {\n        if (product.id === updatedProduct.id) {\n          return updatedProduct;\n        } else {\n          return product;\n        }\n      });\n      setProducts(updatedProductArray);\n    }\n\n  \n\n  function handleAddToCart(e, id) {\n    // console.log('YEO')\n    // console.log(e, id)\n\n    \n    const result = products.filter(product => product.id === id);\n    const newObject = (result[0].quantity) + 1\n\n    \n    \n    fetch(`http://localhost:3004/products/${id}`, {\n      method: \"PATCH\",\n      headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ quantity: newObject}),\n      })\n        .then((r) => r.json())\n        .then((updatedProduct) => {\n          onUpdateProduct(updatedProduct);\n        });\n  }\n\n  \n\n  const [uploadFormView, setUploadFormView] = useState(false)\n\n  function toggleForm() {\n    setUploadFormView(!uploadFormView);\n  }\n\n  function pushSubmit(dataArray) {\n    const newProduct = dataArray\n    \n    const newProductList = [...products, newProduct]\n\n    console.log(newProductList)\n    setProducts(newProductList)\n\n    fetch(\"http://localhost:3004/products\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(newProduct)\n    })\n      .then(resp => resp.json())\n      .then((data) => console.log(data))\n  }\n  \n\n    function sortShoesAscending() {\n    \n        // Use the spread (...) operator to clone the state / prompt React to ackowledge the state change\n        let originalList = [...products];\n        \n        // .sort() \"sorts\" the elements of an array and returns the sorted array.\n        const sortedList = originalList.sort((currentShoe, nextShoe) => {\n          let priceCurrentShoe = currentShoe.price;\n          let priceNextShoe = nextShoe.price;\n    \n          // Compare the two vote amounts. \n          // If comparison returns a value ≤ 0, leave a and b in the same order.\n          // If comparison returns a value > than 0, sort b before a.\n    \n          if (priceCurrentShoe < priceNextShoe) return -1;\n          if (priceCurrentShoe > priceNextShoe) return 1;\n          return 0;\n        });\n    \n        // Use \"sortedList\" to set array returned from .sort() as value for \"paintings\" state\n        setProducts(sortedList);\n      }\n\n      function sortShoesDescending() {\n    \n        // Use the spread (...) operator to clone the state / prompt React to ackowledge the state change\n        let originalList = [...products];\n        \n        // .sort() \"sorts\" the elements of an array and returns the sorted array.\n        const sortedList = originalList.sort((currentShoe, nextShoe) => {\n          let priceCurrentShoe = currentShoe.price;\n          let priceNextShoe = nextShoe.price;\n    \n          // Compare the two vote amounts. \n          // If comparison returns a value ≤ 0, leave a and b in the same order.\n          // If comparison returns a value > than 0, sort b before a.\n    \n          if (priceCurrentShoe > priceNextShoe) return -1;\n          if (priceCurrentShoe < priceNextShoe) return 1;\n          return 0;\n        });\n    \n        // Use \"sortedList\" to set array returned from .sort() as value for \"paintings\" state\n        setProducts(sortedList);\n      }\n\n  return (\n    <div className=\"App\">\n      {/* <NavBar cartItems={cartItems} toggleForm={toggleForm} uploadFormView={uploadFormView}/> */}\n      <Switch>\n        <Route exact path='/'>\n          <Home uploadFormView={uploadFormView}/>\n        </Route>\n        <Route exact path='/marketplace'>\n        <NavBar cartItems={cartItems} toggleForm={toggleForm} uploadFormView={uploadFormView}/>\n        {uploadFormView ? <ProductForm pushSubmit={pushSubmit}/> : <ProductList onAddToCart={handleAddToCart} products = {products} sortShoesAscending={sortShoesAscending} sortShoesDescending={sortShoesDescending}/> }\n        </Route>\n        <Route exact path='/cart'>\n        <NavBar cartItems={cartItems} toggleForm={toggleForm} uploadFormView={uploadFormView}/>\n          <Cart products = {products}/>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}